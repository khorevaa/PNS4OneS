///////////////////////////////////////////////////////////////////////////////////////////////////////
// (с) Tolkachev Pavel, 2021-2022
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Возвращает группу пользователя ИБ. Подробнее см. описание функции
// pns4ones_СервисУведомлений.ГруппаПользователяИБ
//
Функция ГруппаПользователяИБ(Знач ПользовательИБ = Неопределено) Экспорт
	
	Возврат pns4ones_СервисУведомлений.ГруппаПользователяИБ(ПользовательИБ);
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает адрес и номер порта сервера выполняющего отправку уведомлений клиентским сеансам 1С.
// Подобнее см. описание функции pns4ones_СервисУведомлений.НастройкиСервераОтправкиУведомлений
//
Функция НастройкиСервераОтправкиУведомлений() Экспорт
	
	Возврат pns4ones_СервисУведомлений.НастройкиСервераОтправкиУведомлений();
	
КонецФункции

// Возвращает данные текущего пользователя, используемые для подключения к сервису уведомлений.
// Подробнее см. описание функции pns4ones_СервисУведомлений.ДанныеПользователяДляПодключенияКСервису.
//
Функция ДанныеПользователяДляПодключенияКСервису() Экспорт
	
	Возврат pns4ones_СервисУведомлений.ДанныеПользователяДляПодключенияКСервису();
	
КонецФункции

// Записывает ошибку сервиса уведомлений в журнал регистрации.
//
// Параметры:
//  ОписаниеОшибки - Строка - описание возникшей ошибки, которое будет записано в журнал регистрации.
//
Процедура ЗаписатьОшибкуВЖурналРегистрации(ОписаниеОшибки) Экспорт
	
	ЗаписьЖурналаРегистрации(
		"Сервис push-уведомлений",
		УровеньЖурналаРегистрации.Ошибка, , ,
		ОписаниеОшибки
	);
	
КонецПроцедуры

// Возвращает идентификатор текущей информационной базы. Подробнее см. описание функции
// pns4ones_СервисУведомленийПереопределяемый.ИдентификаторИнформационнойБазы
//
Функция ИдентификаторИнформационнойБазы() Экспорт
	
	Возврат pns4ones_СервисУведомленийПереопределяемый.ИдентификаторИнформационнойБазы();
	
КонецФункции

// Возвращает настройки сервиса уведомлений. Подробнее см. описание функции
// pns4ones_СервисУведомлений.НастройкиСервисаУведомлений
//
Функция НастройкиСервисаУведомлений() Экспорт
	
	Возврат pns4ones_СервисУведомлений.НастройкиСервисаУведомлений();
	
КонецФункции

// Выполняет фоновую отправку уведомления.
//
// Параметры:
//  Получатель - Структура - структура, описывающая получателя уведомления. Подробнее см. описание функции
//                           pns4ones_СервисУведомлений.ОтправитьУведомление.
//  Сообщение - Структура - структура, описывающая отправляемой сообщение Подробнее см. описание функции
//                          pns4ones_СервисУведомленийКлиентСервер.ИнициализироватьСообщение.
//  УникальныйИдентификатор - УникальныйИдентификатор - уникальный идентификатор формы, во временное хранилище которой
//                                                      надо поместить результат выполнения процедуры.
// 
// Возвращаемое значение:
//  Структура - структура, описывающая фоновое задание отравки уведомления. Подробнее см. описание функции.
//              ДлительныеОперации.ВыполнитьФункцию.
//
Функция НачатьОтправкуУведомления(Получатель, Сообщение, УникальныйИдентификатор) Экспорт
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	Возврат ДлительныеОперации.ВыполнитьФункцию(
		ПараметрыВыполнения,
		"pns4ones_СервисУведомлений.ОтправитьУведомление",
		Получатель,
		Сообщение
	);
	
КонецФункции

// Выполняет чтение из безопасного хранилища ключа клиента получения уведолений и возвращает прочитанное значение.
// Вызов функция допускается только из общего модуля pns4ones_СервисУведомленийКлиент.
//
// Параметры:
//  ИнформацияОбОшибкеПроверкаВызова - ИнформацияОбОшибке - используется для проверки вызова функции из общего модуля
//                                                          pns4ones_СервисУведомленийКлиент.
// 
// Возвращаемое значение:
//  Строка - ключ клиента получения уведомлений.
//
Функция ПрочитатьКлючКлиентаПолученияУведомлений(ИнформацияОбОшибкеПроверкаВызова) Экспорт
	
	Если ИнформацияОбОшибкеПроверкаВызова.ИмяМодуля <>
			"com_ptolkachev_pns4ones ОбщийМодуль.pns4ones_СервисУведомленийКлиент.Модуль"
	Тогда
		ВызватьИсключение НСтр("ru='Нарушение прав доступа.'");
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат pns4ones_СервисУведомлений.ПрочитатьКлючКлиентаПолученияУведомлений();
	
КонецФункции

// Получает параметры сервиса уведомлений для кеширования на клиенте.
// 
// Возвращаемое значение:
//  Структура - параметры сервиса уведомлений:
//   * Используется - Булево - признак использования сервиса уведомлений.
//   * АдресСервера - Строка - адрес сервера, к которому подключаются клиентские сеансы 1С для получения сообщений.
//   * Порт - Строка - номер порта сервера отправки уведомлений.
//   * ИдентификаторПриложения - Строка - идентификатор приложения сервиса уведомлений.
//   * Компонента - ВнешняяКомпонента - подключенная внешняя компонента для работы с сервисом уведомлений. Содержит
//                                      значение Неопределено, если компонента не подключена.
//   * ПодключениеУстановлено - Булево - содержит Истина, если внешняя компонент подключена и установлено соединение с
//                                       сервисом уведомлений.
//   * Обработчики - Массив - массив структур, описывающих активные обработчики новых уведомлений:
//      ** Обработчик - ОписаниеОповещения - содержит описание процедуры, которая будет вызвана при появлении новых
//	                                         уведомлений. Подробнее см. описание
//	                                         pns4ones_СервисУведомленийКлиент.ПодключитьОбработчикУведомлений.
//      ** Тема - Строка - необязательный, если указан, то обработчик будет вызван лишь для новых уведомлений, которые
//                         относятся к этой теме.
//
Функция ПолучитьПараметрыСервисаУведомлений() Экспорт
	
	НастройкиСервиса = pns4ones_СервисУведомлений.НастройкиСервисаУведомлений();
	
	ПараметрыСервиса = Новый Структура;
	ПараметрыСервиса.Вставить("Используется", НастройкиСервиса.Используется);
	ПараметрыСервиса.Вставить("АдресСервера", НастройкиСервиса.АдресСервера);
	ПараметрыСервиса.Вставить("Порт", НастройкиСервиса.Порт);
	ПараметрыСервиса.Вставить("ИдентификаторПриложения", НастройкиСервиса.ИдентификаторПриложения);
	ПараметрыСервиса.Вставить("Компонента", Неопределено);
	ПараметрыСервиса.Вставить("ПодключениеУстановлено", Ложь);
	ПараметрыСервиса.Вставить("Обработчики", Новый Массив);
	
	Возврат ПараметрыСервиса;
	
КонецФункции

#КонецОбласти
