///////////////////////////////////////////////////////////////////////////////////////////////////////
// (с) Tolkachev Pavel, 2021-2022
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПеременныеФормы

&НаКлиенте
Перем глКаналЧата;

&НаКлиенте
Перем глКаналСервераЧата;

&НаКлиенте
Перем глОписаниеОбработчикаСообщенийЧата;

&НаКлиенте
Перем глПодключениеКСерверуВыполнено;

&НаКлиенте
Перем глФормаОжидания;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьДанныеПользователя();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Не глПараметрыСервисаУведомлений.Используется Тогда
		ПоказатьПредупреждение(, НСтр("ru='Сервис уведомлений не используется. Необходимо настроить подключение к сервису уведомлений PNS4OneS. Чат не доступен.'"));
		Отказ = Истина;
		Возврат;
	ИначеЕсли Не глПараметрыСервисаУведомлений.ПодключениеУстановлено Тогда
		ПоказатьПредупреждение(, НСтр("ru='Соединение с сервисом уведомлений не установлено. Необходимо выполнить подключение к сервису уведомлений PNS4OneS. Чат не доступен.'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	глФормаОжидания = Неопределено;
	глОписаниеОбработчикаСообщенийЧата = Новый ОписаниеОповещения("ОбработчикКомандСервера", ЭтотОбъект);
	pns4ones_СервисУведомленийКлиент.ПодключитьОбработчикУведомлений(глОписаниеОбработчикаСообщенийЧата, глКаналЧата);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ВыполненоПодключениеКСерверу И ЗавершениеРаботы Тогда
		// При завершении работы запрещены серверные вызовы из-за чего нет возможности отправить сообщение об отключении.
		// Поэтому просто выводится соответствующее сообщение.
		Отказ = Истина;
		ТекстПредупреждения = НСтр("ru='Установлено соединение с сервером. Перед завершением работы рекомендуется выполнить отключение от сервера иначе другие пользователи не получат уведомление о вашем отключении.'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	pns4ones_СервисУведомленийКлиент.ОтключитьОбработчикУведомлений(глОписаниеОбработчикаСообщенийЧата);
	
	Если ВыполняетсяПоискСерверов Тогда
		ЗавершитьПоискСерверов();
	КонецЕсли;
	
	Если ВыполненоПодключениеКСерверу И Не ЗавершениеРаботы Тогда
		ВыйтиИзЧата();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокСерверовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если ВыбраннаяСтрока <> Неопределено Тогда
		ПодключитьсяКСерверу(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПользователейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущаяСтрока = СписокПользователей.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	Если ТекущаяСтрока.ИдентификаторПользователя = ИдентификаторПользователя Тогда
		ПоказатьПредупреждение(, НСтр("ru='Нельзя отправить приватное сообщение самому себе.'"));
		Возврат;
	КонецЕсли;
	
	ИдентификаторПолучателя = ТекущаяСтрока.ИдентификаторПользователя;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоискСерверов(Команда)
	
	Если ВыполняетсяПоискСерверов Тогда
		ЗавершитьПоискСерверов();
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаСостояниеПоискаСерверов.Видимость = Истина;
	Элементы.СписокСерверовПоискСерверов.Заголовок = НСтр("ru='Прервать поиск'");
	
	ВыполняетсяПоискСерверов = Истина;
	
	СписокСерверов.Очистить();
	
	Данные = Новый Структура;
	Данные.Вставить("Команда", "ПоискСервераЧата");
	Данные.Вставить("ИдентификаторКлиента", ИдентификаторПользователя);
	
	Сообщение = pns4ones_СервисУведомленийКлиентСервер.ИнициализироватьСообщение();
	Сообщение.Тема = глКаналСервераЧата;
	Сообщение.Данные = Данные;
	
	Оповещение = Новый ОписаниеОповещения("ПоискСерверовЗавершение", ЭтотОбъект);
	
	pns4ones_СервисУведомленийКлиент.НачатьОтправкуУведомленияВсемПользователям(Оповещение, Сообщение);
	
	// Ожидание ответа от потенциальных серверов в течении 10 секунд.
	ПодключитьОбработчикОжидания("ЗавершитьПоискСерверов", 10, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискСерверовЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Результат <> Неопределено И Не Результат.Успешно Тогда
		ТекстСообщения = НСтр("ru='Произошла ошибка при поиске серверов'") + ":" + Символы.ПС +
			Результат.ТекстОшибки;
		ПоказатьПредупреждение(, ТекстСообщения);
		ЗавершитьПоискСерверов();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьсяКСерверу(Команда)
	
	ТекущиеДанные = Элементы.СписокСерверов.ТекущиеДанные;
	
	Если СписокСерверов.Количество() = 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru='Чат серверов не обнаружено. Для обновления списка доступных серверов нажмите кнопку ""Поиск серверов"".'"));
		Возврат;
	ИначеЕсли ТекущиеДанные = Неопределено Тогда
		ПоказатьПредупреждение(, НСтр("ru='Выберите в списке чат сервер, к которому вы хотите подключиться.'"));
		Возврат;
	КонецЕсли;
	
	Если ВыполняетсяПоискСерверов Тогда
		ЗавершитьПоискСерверов();
	КонецЕсли;
	
	Данные = Новый Структура;
	Данные.Вставить("Команда", "Подключение");
	Данные.Вставить("ИдентификаторПользователя", ИдентификаторПользователя);
	Данные.Вставить("ИмяПользователя", ИмяПользователя);
	
	Результат = ОтправитьСообщениеЧатСерверу(глКаналСервераЧата, ТекущиеДанные.ИдентификаторСервера, Данные);
	
	Если Не Результат.Успешно Тогда
		ТекстСообщения = НСтр("ru='Произошла ошибка при подключении к серверу'") + ":" + Символы.ПС +
			Результат.ТекстОшибки;
		ПоказатьПредупреждение(, ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ОповещениеОЗакрытииФормыДлительнойОперации = Новый ОписаниеОповещения(
		"ПодключениеКСерверуЗакрытиеФормыДлительнойОперации",
		ЭтотОбъект
	);
	ПоказатьФормуДлительнойОперации(НСтр("ru='Подключение к чат серверу.'"), ОповещениеОЗакрытииФормыДлительнойОперации);
	
	ВыполняетсяПодключениеКСерверу = Истина;
	глПодключениеКСерверуВыполнено = Ложь;
	
	// Ожидание подтверждения подключения от сервера в течении 10 секунд. Если в отведённое время ответ не получен,
	// то попытка подкючения считается неудачной.
	ПодключитьОбработчикОжидания("ЗавершитьПодключениеКСерверу", 10, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьСообщение(Команда)
	
	Если ПустаяСтрока(СообщениеЧата) Тогда
		Возврат;
	КонецЕсли;
	
	Данные = Новый Структура;
	Данные.Вставить("Команда", "Сообщение");
	Данные.Вставить("ИдентификаторПользователя", ИдентификаторПользователя);
	Данные.Вставить("ТекстСообщения", СообщениеЧата);
	
	Если Не ПустаяСтрока(ИдентификаторПолучателя) Тогда
		Данные.Вставить("Получатель", ИдентификаторПолучателя);
	КонецЕсли;
	
	Результат = ОтправитьСообщениеЧатСерверу(глКаналСервераЧата, ИдентификаторСервера, Данные);
	
	Если Не Результат.Успешно Тогда
		ТекстСообщения = НСтр("ru='Не удалось отправить сообщение'") + ":" + Символы.ПС +
			Результат.ТекстОшибки;
		ПоказатьПредупреждение(, ТекстСообщения);
	КонецЕсли;
	
    СообщениеЧата = "";
	ТекущийЭлемент = Элементы.СообщениеЧата;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗавершитьПоискСерверов()
	
	ОтключитьОбработчикОжидания("ЗавершитьПоискСерверов");
	
	Элементы.ГруппаСостояниеПоискаСерверов.Видимость = Ложь;
	Элементы.СписокСерверовПоискСерверов.Заголовок = НСтр("ru='Поиск серверов'");
	
	ВыполняетсяПоискСерверов = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьПодключениеКСерверу()
	
	ЗакрытьФормуОжидания();
	ОтключитьОбработчикОжидания("ЗавершитьПодключениеКСерверу");
	
	ВыполняетсяПодключениеКСерверу = Ложь;
	
	Если Не глПодключениеКСерверуВыполнено Тогда
		ПоказатьПредупреждение(, НСтр("ru='Не удалось подключиться к чат серверу.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикКомандСервера(Сообщение, ДопПараметры) Экспорт
	
	Если ТипЗнч(Сообщение) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Сообщение.СтандартнаяОбработка = Ложь;
	
	ТипСообщения = ВРег(Сообщение.Данные.ТипСообщения);
	
	Если ТипСообщения = ВРег("ДанныеСервераЧата") Тогда
		ОбработатьСообщениеДанныеСервера(Сообщение.Данные);
	ИначеЕсли ТипСообщения = ВРег("ПодключениеУстановлено") Тогда
		ОбработатьСообщениеПодключениеУстановлено(Сообщение.Данные);
	ИначеЕсли ТипСообщения = ВРег("НовоеПодключение") Тогда
		ОбработатьСообщениеНовоеПодключение(Сообщение.Данные);
	ИначеЕсли ТипСообщения = ВРег("Сообщение") Тогда
		ОбработатьСообщениеЧата(Сообщение.Данные.ТекстСообщения);
	ИначеЕсли ТипСообщения = ВРег("ОтключениеПользователя") Тогда
		ОбработатьСообщениеОтключениеПользователя(Сообщение.Данные.ИдентификаторПользователя);
	ИначеЕсли ТипСообщения = ВРег("ОтключениеСервера") Тогда
		ОбработатьСообщениеОтключениеСервера();
	ИначеЕсли ТипСообщения = ВРег("Ошибка") Тогда
		ОбработатьСообщениеОбОшибке(Сообщение.Данные.ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьСообщениеДанныеСервера(ДанныеСервера)
	
	НоваяСтрока = СписокСерверов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеСервера);
	
	СписокСерверов.Сортировать("ИмяСервера");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьСообщениеПодключениеУстановлено(ДанныеСервера)
	
	// Проверку необходимо выполнить до вызова процедуры ЗавершитьПодключениеКСерверу,
	// т.к. при вызове состояние изменится.
	ПодключениеОтменено = Не ВыполняетсяПодключениеКСерверу;
	
	глПодключениеКСерверуВыполнено = Истина;
	ЗавершитьПодключениеКСерверу();
	
	Если ПодключениеОтменено Тогда
		Возврат;
	КонецЕсли;
	
	ИдентификаторСервера = Элементы.СписокСерверов.ТекущиеДанные.ИдентификаторСервера;
	ВыполненоПодключениеКСерверу = Истина;
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаЧат;
	
	СписокПользователей.Очистить();
	
	Пользователи = ЗначениеИзСтрокиВнутрВызовСервера(ДанныеСервера.Пользователи);
	Для каждого ДанныеПользователя Из Пользователи Цикл
		СтрокаПользователя = СписокПользователей.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПользователя, ДанныеПользователя);
	КонецЦикла;

	ОбновитьСписокВыбораПолучателей();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьСообщениеНовоеПодключение(ДанныеПодключения)
	
	Если ДанныеПодключения.ИдентификаторПользователя <> ИдентификаторПользователя Тогда
		СтрокаПользователя = СписокПользователей.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПользователя, ДанныеПодключения);
		
		СписокПользователей.Сортировать("ИмяПользователя");
		
		ОбновитьСписокВыбораПолучателей();
	КонецЕсли;
	
	ИсторияЧата = ИсторияЧата + ТекущаяДата() + ": " +
		СтрШаблон(НСтр("ru='Пользователь %1 вошел в чат'"), ДанныеПодключения.ИмяПользователя) +
		Символы.ПС;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьСообщениеЧата(ТекстСообщения)
	
	ИсторияЧата = ИсторияЧата + ТекстСообщения + Символы.ПС;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьСообщениеОтключениеПользователя(ИдентификаторПользователя)
	
	СтруктураПоиска = Новый Структура("ИдентификаторПользователя", ИдентификаторПользователя);
	НайденныеСтроки = СписокПользователей.НайтиСтроки(СтруктураПоиска);
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаПользователя = НайденныеСтроки[0];
	
	ИсторияЧата = ИсторияЧата + ТекущаяДата() + ": " +
		СтрШаблон(НСтр("ru='Пользователь %1 покинул чат.'"), СтрокаПользователя.ИмяПользователя) +
		Символы.ПС;
		
	СписокПользователей.Удалить(СтрокаПользователя);
	ОбновитьСписокВыбораПолучателей();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьСообщениеОтключениеСервера()
	
	ИсторияЧата = "";
	СообщениеЧата = "";
	ИдентификаторСервера = "";
	ИдентификаторПолучателя = "";
	ВыполненоПодключениеКСерверу = Ложь;
	СписокПользователей.Очистить();
	СписокСерверов.Очистить();
	
	ОбновитьСписокВыбораПолучателей();
	
	ПоказатьПредупреждение(, НСтр("ru='Чат сервер завершил работу.'"));
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПодключениеКСерверу;
	ПоискСерверов(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьСообщениеОбОшибке(ТекстСообщения)
	
	Если ВыполняетсяПодключениеКСерверу Тогда
		глПодключениеКСерверуВыполнено = Ложь;
		ЗавершитьПодключениеКСерверу();
	КонецЕсли;
	
	ПоказатьПредупреждение(, ТекстСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыйтиИзЧата()
	
	Данные = Новый Структура;
	Данные.Вставить("Команда", "Отключение");
	Данные.Вставить("ИдентификаторПользователя", ИдентификаторПользователя);
	
	ОтправитьСообщениеЧатСерверу(глКаналСервераЧата, ИдентификаторСервера, Данные);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокВыбораПолучателей()
	
	Элементы.ИдентификаторПолучателя.СписокВыбора.Очистить();
	Элементы.ИдентификаторПолучателя.СписокВыбора.Добавить("", НСтр("ru='Все'"));
	
	Для каждого СтрокаПользователя Из СписокПользователей Цикл
		
		Если СтрокаПользователя.ИдентификаторПользователя <> ИдентификаторПользователя Тогда
			Элементы.ИдентификаторПолучателя.СписокВыбора.Добавить(
				СтрокаПользователя.ИдентификаторПользователя,
				СтрокаПользователя.ИмяПользователя
			);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьФормуДлительнойОперации(ТекстСообщения, ОповещениеОЗакрытии = Неопределено)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТекстСообщения", ТекстСообщения);
	
	глФормаОжидания = ОткрытьФорму(
		"ОбщаяФорма.ДлительнаяОперация",
		ПараметрыФормы,
		ЭтаФорма, , , ,
		ОповещениеОЗакрытии
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключениеКСерверуЗакрытиеФормыДлительнойОперации(Результат, ДопПараметры) Экспорт
	
	глФормаОжидания = Неопределено;
	глПодключениеКСерверуВыполнено = Истина; // Предоставщение вывода сообщения об ошибке.
	ЗавершитьПодключениеКСерверу();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФормуОжидания()
	
	Если глФормаОжидания <> Неопределено Тогда
		глФормаОжидания.Закрыть();
		глФормаОжидания = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗначениеИзСтрокиВнутрВызовСервера(СтрокаЗначения)
	
	Возврат ЗначениеИзСтрокиВнутр(РаскодироватьСтроку(СтрокаЗначения, СпособКодированияСтроки.КодировкаURL));
	
КонецФункции

&НаСервере
Процедура ЗаполнитьДанныеПользователя()
	
	ИдентификаторПользователя = pns4ones_СервисУведомлений.ПолучитьИдентификаторПользователя();
	ИмяПользователя = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Пользователи.ТекущийПользователь(), "Наименование");
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОтправитьСообщениеЧатСерверу(КаналСервера, ИдентификаторСервера, Данные)
	
	Сообщение = pns4ones_СервисУведомленийКлиентСервер.ИнициализироватьСообщение();
	Сообщение.Тема = КаналСервера;
	Сообщение.Данные = Данные;
	
	Получатель = pns4ones_СервисУведомленийКлиентСервер.ПолучательПользователь(ИдентификаторСервера);
	Возврат pns4ones_СервисУведомлений.ОтправитьУведомление(Получатель, Сообщение);
	
КонецФункции

#КонецОбласти

глКаналЧата = "ДемоЧат";
глКаналСервераЧата = "ДемоСерверЧата";