///////////////////////////////////////////////////////////////////////////////////////////////////////
// (с) Tolkachev Pavel, 2021-2022
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПрочитатьНастройкиНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьДоступность();
	УстановитьВидимостьПредупрежденияОНезаполненныхПолях();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользоватьСервисУведомленийПриИзменении(Элемент)
	
	ЗаписатьНастройки();
	УстановитьДоступность();
	УстановитьВидимостьПредупрежденияОНезаполненныхПолях();
	
КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторПриложенияПриИзменении(Элемент)

	Если глПараметрыСервисаУведомлений.ПодключениеУстановлено И
			ПредыдущиеЗначения.ИдентификаторПриложения <> Настройки.ИдентификаторПриложения
	Тогда
		ПоказатьПредупреждение(, НСтр("ru='Был изменен идентификатор приложения сервиса уведомлений. Для подключения к новому серверу пользователям необходимо завершить текущий сеанс 1С и запустить новый.'"));
	КонецЕсли;
	
	ЗаписатьНастройки();
	УстановитьВидимостьПредупрежденияОНезаполненныхПолях();
	
КонецПроцедуры

&НаКлиенте
Процедура АдресСервераОтправленияУведомленийПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Настройки.АдресСервераОтправленияУведомлений)
			И Не ЗначениеЗаполнено(Настройки.АдресСервераПолученияУведомлений)
	Тогда
		Настройки.АдресСервераПолученияУведомлений = Настройки.АдресСервераОтправленияУведомлений;
	КонецЕсли;
	
	ЗаписатьНастройки();
	УстановитьВидимостьПредупрежденияОНезаполненныхПолях();
	
КонецПроцедуры

&НаКлиенте
Процедура АдресСервераПолученияУведомленийПриИзменении(Элемент)

	Если глПараметрыСервисаУведомлений.ПодключениеУстановлено И
			ПредыдущиеЗначения.АдресСервераПолученияУведомлений <> Настройки.АдресСервераПолученияУведомлений
	Тогда
		ПоказатьПредупреждение(, НСтр("ru='Был изменен адрес сервера приема уведомлений. Для подключения к новому серверу пользователям необходимо завершить текущий сеанс 1С и запустить новый.'"));
	КонецЕсли;

	ЗаписатьНастройки();
	УстановитьВидимостьПредупрежденияОНезаполненныхПолях();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьЗащищенноеСоединениеПриИзменении(Элемент)
	
	ЗаписатьНастройки();
	
КонецПроцедуры

&НаКлиенте
Процедура КлючСервераОтправленияУведомленийПриИзменении(Элемент)
	
	ЗаписатьКлючСервераОтправленияУведомлений(КлючСервераОтправленияУведомлений);
	УстановитьВидимостьПредупрежденияОНезаполненныхПолях();
	
КонецПроцедуры

&НаКлиенте
Процедура КлючКлиентаПриемаУведомленийПриИзменении(Элемент)

	Если глПараметрыСервисаУведомлений.ПодключениеУстановлено Тогда
		ПоказатьПредупреждение(, НСтр("ru='Был изменен ключ клиента приема уведомлений. Для активации изменений необходимо завершить текущий сеанс 1С и запустить новый.'"));
	КонецЕсли;

	ЗаписатьКлючКлиентаПриемаУведомлений(КлючКлиентаПриемаУведомлений);
	УстановитьВидимостьПредупрежденияОНезаполненныхПолях();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИзменитьКлючСервераОтправленияУведомлений(Команда)
	
	КлючСервераОтправленияУведомлений = ПрочитатьКлючСервераОтправленияУведомлений();
	
	Элементы.КлючСервераОтправленияУведомлений.РежимПароля = Ложь;
	Элементы.КлючСервераОтправленияУведомлений.ТолькоПросмотр = Ложь;
	
	ТекущийЭлемент = Элементы.КлючСервераОтправленияУведомлений;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьКлючСервераОтправленияУведомлений(Команда)
	
	КлючСервераОтправленияУведомлений = ПрочитатьКлючСервераОтправленияУведомлений();
	Элементы.КлючСервераОтправленияУведомлений.РежимПароля = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьКлючДоступаСервераОтправленияУведомлений(Команда)
	
	СброситьКлючДоступаСервераОтправленияУведомленийНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьКлючКлиентаПриемаУведомлений(Команда)
	
	КлючКлиентаПриемаУведомлений = ПрочитатьКлючКлиентаПриемаУведомлений();
	
	Элементы.КлючКлиентаПриемаУведомлений.РежимПароля = Ложь;
	Элементы.КлючКлиентаПриемаУведомлений.ТолькоПросмотр = Ложь;
	
	ТекущийЭлемент = Элементы.КлючКлиентаПриемаУведомлений;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьКлючКлиентаПриемаУведомлений(Команда)
	
	КлючКлиентаПриемаУведомлений = ПрочитатьКлючКлиентаПриемаУведомлений();
	Элементы.КлючКлиентаПриемаУведомлений.РежимПароля = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаписатьНастройки()
	
	ЗаписатьНастройкиНаСервере();
	
	ОбновитьПовторноИспользуемыеЗначения();
	pns4ones_СервисУведомленийКлиент.УстановитьПараметрыСервисаУведомлений();
	УстановитьДоступность();
	
	Оповестить("pns4ones_ИзмененыНастройкиСервисаУведомлений");
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьСтруктуруПредыдущихНастроек()
	
	ПредыдущиеЗначения = Новый Структура;
	
	Для каждого Ресурс Из Метаданные.РегистрыСведений.pns4ones_НастройкиСервисаУведомлений.Ресурсы Цикл
		ПредыдущиеЗначения.Вставить(Ресурс.Имя, Неопределено);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьНастройкиНаСервере()
	
	МенеджерЗаписи = РеквизитФормыВЗначение("Настройки");
	МенеджерЗаписи.Прочитать();
	
	ИнициализироватьСтруктуруПредыдущихНастроек();
	ЗаполнитьЗначенияСвойств(ПредыдущиеЗначения, МенеджерЗаписи);
	
	ЗначениеВРеквизитФормы(МенеджерЗаписи, "Настройки");
	
	Если ЗначениеЗаполнено(ПрочитатьКлючСервераОтправленияУведомлений()) Тогда
		КлючСервераОтправленияУведомлений = "Скрыт";
	КонецЕсли;
	Если ЗначениеЗаполнено(ПрочитатьКлючКлиентаПриемаУведомлений()) Тогда
		КлючКлиентаПриемаУведомлений = "Скрыт";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНастройкиНаСервере()
	
	МенеджерЗаписи = РеквизитФормыВЗначение("Настройки");
	МенеджерЗаписи.Записать();
	
	ЗаполнитьЗначенияСвойств(ПредыдущиеЗначения, МенеджерЗаписи);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПрочитатьКлючСервераОтправленияУведомлений()
	
	УстановитьПривилегированныйРежим(Истина);
	ПрочитанноеЗначение = pns4ones_СервисУведомлений.ПрочитатьКлючСервераОтправленияУведомлений();
	Возврат ?(ТипЗнч(ПрочитанноеЗначение) = Тип("Строка"), ПрочитанноеЗначение, "");
	
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаписатьКлючСервераОтправленияУведомлений(КлючСервера)
	
	УстановитьПривилегированныйРежим(Истина);
	pns4ones_СервисУведомлений.ЗаписатьКлючСервераОтправленияУведомлений(КлючСервера);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СброситьКлючДоступаСервераОтправленияУведомленийНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	pns4ones_СервисУведомлений.СброситьКлючДоступаКСерверуОтправленияУведомлений();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПрочитатьКлючКлиентаПриемаУведомлений()
	
	УстановитьПривилегированныйРежим(Истина);
	ПрочитанноеЗначение = pns4ones_СервисУведомлений.ПрочитатьКлючКлиентаПолученияУведомлений();
	Возврат ?(ТипЗнч(ПрочитанноеЗначение) = Тип("Строка"), ПрочитанноеЗначение, "");
	
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаписатьКлючКлиентаПриемаУведомлений(КлючКлиента)
	
	УстановитьПривилегированныйРежим(Истина);
	pns4ones_СервисУведомлений.ЗаписатьКлючКлиентаПолученияУведомлений(КлючКлиента);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступность()
	
	Элементы.ИдентификаторПриложения.Доступность = Настройки.ИспользоватьСервисУведомлений;
	Элементы.ГруппаСерверОтправленияУведомлений.Доступность = Настройки.ИспользоватьСервисУведомлений;
	Элементы.ГруппаСерверПриемаУведомлений.Доступность = Настройки.ИспользоватьСервисУведомлений;
		
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьПредупрежденияОНезаполненныхПолях()
	
	ВидимостьПредупреждения = Не (
		ЗначениеЗаполнено(Настройки.ИдентификаторПриложения)
		И ЗначениеЗаполнено(Настройки.АдресСервераОтправленияУведомлений)
		И ЗначениеЗаполнено(КлючСервераОтправленияУведомлений)
		И ЗначениеЗаполнено(Настройки.АдресСервераПолученияУведомлений)
		И ЗначениеЗаполнено(КлючКлиентаПриемаУведомлений)
	);
	Элементы.ПредупреждениеОбОбязательныхПолях.Видимость = ВидимостьПредупреждения;
	
КонецПроцедуры

#КонецОбласти