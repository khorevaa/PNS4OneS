///////////////////////////////////////////////////////////////////////////////////////////////////////
// (с) Tolkachev Pavel, 2021-2022
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

&НаКлиенте
Перем глКаналЧата;

&НаКлиенте
Перем глКаналСервераЧата;

&НаКлиенте
Перем глОписаниеОбработчикаКомандЧата;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИдентификаторСервера = pns4ones_СервисУведомлений.ПолучитьИдентификаторПользователя();
	ИмяСервера = ПолучитьИмяСервераПоИмениПользователя();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	глОписаниеОбработчикаКомандЧата = Новый ОписаниеОповещения("ОбработчикКомандЧата", ЭтотОбъект);
	ОбновитьСостояниеЧатСервера();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЧатСерверЗапущен И СписокПодключений.Количество() > 0 И ЗавершениеРаботы Тогда
		// При завершении работы запрещены серверные вызовы из-за чего нет возможности отправить сообщение об отключении.
		// Поэтому просто выводится соответствующее сообщение.
		Отказ = Истина;
		ТекстПредупреждения = НСтр("ru='Перед завершением работы рекомендуется остановить работу сервера иначе клиенты будут продолжать попытки отправлять сообщения.'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЧатСерверЗапущен И Не ЗавершениеРаботы Тогда
		ОстановитьЧатСервер(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗапуститьЧатСервер(Команда)
	
	pns4ones_СервисУведомленийКлиент.ПодключитьОбработчикУведомлений(
		глОписаниеОбработчикаКомандЧата,
		глКаналСервераЧата
	);
	ЧатСерверЗапущен = Истина;
	ОбновитьСостояниеЧатСервера();
	
КонецПроцедуры

&НаКлиенте
Процедура ОстановитьЧатСервер(Команда)
	
	ЧатСерверЗапущен = Ложь;
	
	pns4ones_СервисУведомленийКлиент.ОтключитьОбработчикУведомлений(глОписаниеОбработчикаКомандЧата);
	ОбновитьСостояниеЧатСервера();
	
	СписокПодключений.Очистить();
	КоличествоПользователей = 0;
	
	Данные = Новый Структура("ТипСообщения", "ОтключениеСервера");
	ОтправитьСообщениеВсемКлиентам(Данные, глКаналЧата);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработчикКомандЧата(Сообщение, ДопПараметры) Экспорт
	
	Если ТипЗнч(Сообщение) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Сообщение.СтандартнаяОбработка = Ложь;
	
	КомандаЧата = ВРег(Сообщение.Данные.Команда);
	Если КомандаЧата = ВРег("ПоискСервераЧата") Тогда
		ОбработатьКомандуПоискСервера(Сообщение.Данные.ИдентификаторКлиента);
	ИначеЕсли КомандаЧата = ВРег("Подключение") Тогда
		ОбработатьКомандуПодключениеКлиента(Сообщение.Данные);
	ИначеЕсли КомандаЧата = ВРег("Отключение") Тогда
		ОбработатьКомандуОтключениеПользователя(Сообщение.Данные.ИдентификаторПользователя);
	ИначеЕсли КомандаЧата = ВРег("Сообщение") Тогда
		ОбработатьКомандуСообщение(Сообщение.Данные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьКомандуПоискСервера(ИдентификаторКлиента)
	
	Данные = Новый Структура;
	Данные.Вставить("ТипСообщения", "ДанныеСервераЧата");
	Данные.Вставить("ИдентификаторСервера", ИдентификаторСервера);
	Данные.Вставить("ИмяСервера", ИмяСервера);
	
	ОтправитьСообщениеКлиенту(ИдентификаторКлиента, Данные, глКаналЧата);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьКомандуПодключениеКлиента(Данные)
	
	Подключение = ПолучитьПодключениеПоИдентификатору(Данные.ИдентификаторПользователя);
	Если Подключение <> Неопределено Тогда
		ТекстСообщения = СтрШаблон(
			НСтр("ru='Пользователь %1 уже вошёл в чат.'"),
			Данные.ИмяПользователя
		);
		ОтправитьСообщениеОбОшибкеКлиенту(Данные.ИдентификаторПользователя, ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	Подключение = СписокПодключений.Добавить();
	ЗаполнитьЗначенияСвойств(Подключение, Данные);
	
	СписокПодключений.Сортировать("ИмяПользователя");
	
	КоличествоПользователей = СписокПодключений.Количество();
	
	ДанныеПодключения = Новый Структура;
	ДанныеПодключения.Вставить("ТипСообщения", "ПодключениеУстановлено");
	
	Пользователи = Новый Массив;
	Для каждого Подключение Из СписокПодключений Цикл
		ДанныеПользователя = Новый Структура("ИдентификаторПользователя, ИмяПользователя");
		ЗаполнитьЗначенияСвойств(ДанныеПользователя, Подключение);
		
		Пользователи.Добавить(ДанныеПользователя);
	КонецЦикла;
	
	ДанныеПодключения.Вставить("Пользователи", ЗначениеВСтрокуВнутрВызовСервера(Пользователи));
	ОтправитьСообщениеКлиенту(Данные.ИдентификаторПользователя, ДанныеПодключения, глКаналЧата);

	ОповеститьКлиентовОПодключенииНовогоПользователя(
		Данные.ИдентификаторПользователя,
		Данные.ИмяПользователя
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьКлиентовОПодключенииНовогоПользователя(ИдентификаторПользователя, ИмяПользователя)
	
	Данные = Новый Структура;
	Данные.Вставить("ТипСообщения", "НовоеПодключение");
	Данные.Вставить("ИдентификаторПользователя", ИдентификаторПользователя);
	Данные.Вставить("ИмяПользователя", ИмяПользователя);
	
	ОтправитьСообщениеВсемКлиентам(Данные, глКаналЧата);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьКомандуСообщение(Данные)
	Перем ПолучательСообщения;
	
	Подключение = ПолучитьПодключениеПоИдентификатору(Данные.ИдентификаторПользователя);
	Если Подключение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекстСообщения = "<" + Подключение.ИмяПользователя + "> " + Данные.ТекстСообщения;
	ПриватноеСообщение = Данные.Свойство("Получатель", ПолучательСообщения) И ЗначениеЗаполнено(ПолучательСообщения);
	
	Если ПриватноеСообщение Тогда
		ТекстСообщения = "(" + НСтр("ru='приватно'") + ") " + ТекстСообщения;
		
		Получатель = pns4ones_СервисУведомленийКлиентСервер.ПолучательПользователь(Данные.Получатель);
		ОтправитьСообщениеЧата(Получатель, ТекстСообщения);
		
		// Необходимо продублировать приватное сообщение отправителю, чтобы оно отобразилось в его чате.
		Получатель = pns4ones_СервисУведомленийКлиентСервер.ПолучательПользователь(Данные.ИдентификаторПользователя);
		ОтправитьСообщениеЧата(Получатель, ТекстСообщения);

	Иначе
		Получатель = pns4ones_СервисУведомленийКлиентСервер.ПолучательВсеПользователи();
		ОтправитьСообщениеЧата(Получатель, ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьКомандуОтключениеПользователя(ИдентификаторПользователя)
	
	Подключение = ПолучитьПодключениеПоИдентификатору(ИдентификаторПользователя);
	Если Подключение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокПодключений.Удалить(Подключение);
	КоличествоПользователей = СписокПодключений.Количество();
	
	Данные = Новый Структура;
	Данные.Вставить("ТипСообщения", "ОтключениеПользователя");
	Данные.Вставить("ИдентификаторПользователя", ИдентификаторПользователя);
	
	ОтправитьСообщениеВсемКлиентам(Данные, глКаналЧата);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьСообщениеЧата(Получатель, ТекстСообщения)
	
	Данные = Новый Структура;
	Данные.Вставить("ТипСообщения", "Сообщение");
	Данные.Вставить("ТекстСообщения", Строка(ТекущаяДата()) + ": " + ТекстСообщения);
	
	ОтправитьСообщение(Получатель, Данные, глКаналЧата);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьСообщениеОбОшибкеКлиенту(ИдентификаторПользователя, ТекстСообщения)
	
	Данные = Новый Структура;
	Данные.Вставить("ТипСообщения", "Ошибка");
	Данные.Вставить("ТекстСообщения", ТекстСообщения);
	
	ОтправитьСообщениеКлиенту(ИдентификаторПользователя, Данные, глКаналЧата);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОтправитьСообщениеКлиенту(ИдентификаторПользователя, Данные, КаналЧата)
	
	Получатель = pns4ones_СервисУведомленийКлиентСервер.ПолучательПользователь(ИдентификаторПользователя);
	ОтправитьСообщение(Получатель, Данные, КаналЧата);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОтправитьСообщениеВсемКлиентам(Данные, КаналЧата)
	
	Получатель = pns4ones_СервисУведомленийКлиентСервер.ПолучательВсеПользователи();
	ОтправитьСообщение(Получатель, Данные, КаналЧата);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОтправитьСообщение(Получатель, Данные, КаналЧата)
	
	Сообщение = pns4ones_СервисУведомленийКлиентСервер.ИнициализироватьСообщение();
	Сообщение.Тема = КаналЧата;
	Сообщение.Данные = Данные;
	
	pns4ones_СервисУведомлений.ОтправитьУведомление(Получатель, Сообщение);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСостояниеЧатСервера()
	
	Если ЧатСерверЗапущен Тогда
		СостояниеСервера = НСтр("ru='Работает'");
		Элементы.ЗапуститьЧатСервер.Доступность = Ложь;
		Элементы.ОстановитьЧатСервер.Доступность = Истина;
	Иначе
		СостояниеСервера = НСтр("ru='Остановлен'");
		Элементы.ЗапуститьЧатСервер.Доступность = Истина;
		Элементы.ОстановитьЧатСервер.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьИмяСервераПоИмениПользователя()
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийПользователь, "Наименование");
	
КонецФункции

&НаСервереБезКонтекста
Функция ЗначениеВСтрокуВнутрВызовСервера(Значение)
	
	Возврат КодироватьСтроку(ЗначениеВСтрокуВнутр(Значение), СпособКодированияСтроки.КодировкаURL);
	
КонецФункции

&НаКлиенте
Функция ПолучитьПодключениеПоИдентификатору(ИдентификаторПользователя)
	
	СтруктураПоиска = Новый Структура("ИдентификаторПользователя", ИдентификаторПользователя);
	НайденныеСтроки = СписокПодключений.НайтиСтроки(СтруктураПоиска);
	Возврат ?(НайденныеСтроки.Количество() > 0,
		НайденныеСтроки[0],
		Неопределено
	);
	
КонецФункции

#КонецОбласти

глКаналЧата = "ДемоЧат";
глКаналСервераЧата = "ДемоСерверЧата";